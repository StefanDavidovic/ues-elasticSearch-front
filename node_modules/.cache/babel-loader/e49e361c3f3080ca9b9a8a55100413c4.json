{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Downloads/OSA-React-master/src/components/registerSalesmenComponent.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"This field is required!\");\n  }\n};\n\nconst firstname = value => {\n  if (value.length < 3 || value.length > 20) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Input real name.\");\n  }\n};\n\nconst lastname = value => {\n  if (value.length < 3 || value.length > 20) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Input real lastname.\");\n  }\n};\n\nconst vadress = value => {\n  if (value.length < 3 || value.length > 20) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Input real adress.\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"The username must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nexport default class RegisterSalesmen extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeAdress = this.onChangeAdress.bind(this);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      password: \"\",\n      adress: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeAdress(e) {\n    this.setState({\n      adress: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(this.state.firstname, this.state.lastname, this.state.username, this.state.password, this.state.adress).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"bla\") // <div className=\"col-md-12\">\n    //   <div className=\"card card-container\">\n    //     <img\n    //       src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n    //       alt=\"profile-img\"\n    //       className=\"profile-img-card\"\n    //     />\n    //     <Form\n    //       onSubmit={this.handleRegister}\n    //       ref={c => {\n    //         this.form = c;\n    //       }}\n    //     >\n    //       {!this.state.successful && (\n    //         <div>\n    //           <div className=\"form-group\">\n    //             <label htmlFor=\"firstname\">Firstname</label>\n    //             <Input\n    //               type=\"text\"\n    //               className=\"form-control\"\n    //               name=\"firstname\"\n    //               value={this.state.firstname}\n    //               onChange={this.onChangeFirstname}\n    //               validations={[required, firstname]}\n    //             />\n    //           </div>\n    //           <div className=\"form-group\">\n    //             <label htmlFor=\"lastname\">Lastname</label>\n    //             <Input\n    //               type=\"text\"\n    //               className=\"form-control\"\n    //               name=\"lastname\"\n    //               value={this.state.lastname}\n    //               onChange={this.onChangeLastname}\n    //               validations={[required, lastname]}\n    //             />\n    //           </div>\n    //           <div className=\"form-group\">\n    //             <label htmlFor=\"username\">Username</label>\n    //             <Input\n    //               type=\"text\"\n    //               className=\"form-control\"\n    //               name=\"username\"\n    //               value={this.state.username}\n    //               onChange={this.onChangeUsername}\n    //               validations={[required, vusername]}\n    //             />\n    //           </div>\n    //           <div className=\"form-group\">\n    //             <label htmlFor=\"password\">Password</label>\n    //             <Input\n    //               type=\"password\"\n    //               className=\"form-control\"\n    //               name=\"password\"\n    //               value={this.state.password}\n    //               onChange={this.onChangePassword}\n    //               validations={[required, vpassword]}\n    //             />\n    //           </div>\n    //           <div className=\"form-group\">\n    //             <label htmlFor=\"adress\">Adress</label>\n    //             <Input\n    //               type=\"text\"\n    //               className=\"form-control\"\n    //               name=\"adress\"\n    //               value={this.state.adress}\n    //               onChange={this.onChangeAdress}\n    //               validations={[required, vadress]}\n    //             />\n    //           </div>\n    //           <div className=\"form-group\">\n    //             <button className=\"btn btn-primary btn-block\">Sign Up</button>\n    //           </div>\n    //         </div>\n    //       )}\n    //       {this.state.message && (\n    //         <div className=\"form-group\">\n    //           <div\n    //             className={\n    //               this.state.successful\n    //                 ? \"alert alert-success\"\n    //                 : \"alert alert-danger\"\n    //             }\n    //             role=\"alert\"\n    //           >\n    //             {this.state.message}\n    //           </div>\n    //         </div>\n    //       )}\n    //       <CheckButton\n    //         style={{ display: \"none\" }}\n    //         ref={c => {\n    //           this.checkBtn = c;\n    //         }}\n    //       />\n    //     </Form>\n    //   </div>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Downloads/OSA-React-master/src/components/registerSalesmenComponent.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","required","value","firstname","length","lastname","vadress","vusername","vpassword","RegisterSalesmen","constructor","props","handleRegister","bind","onChangeUsername","onChangeFirstname","onChangeLastname","onChangePassword","onChangeAdress","state","username","password","adress","successful","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","error","resMessage","toString","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst firstname = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Input real name.\n      </div>\n    );\n  }\n};\n\nconst lastname = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Input real lastname.\n      </div>\n    );\n  }\n};\n\nconst vadress = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Input real adress.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class RegisterSalesmen extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname= this.onChangeLastname.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeAdress = this.onChangeAdress.bind(this);\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      password: \"\",\n      adress: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeAdress(e) {\n    this.setState({\n      adress: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.username,\n        this.state.password,\n        this.state.adress\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (<p>bla</p>\n      // <div className=\"col-md-12\">\n      //   <div className=\"card card-container\">\n      //     <img\n      //       src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      //       alt=\"profile-img\"\n      //       className=\"profile-img-card\"\n      //     />\n\n      //     <Form\n      //       onSubmit={this.handleRegister}\n      //       ref={c => {\n      //         this.form = c;\n      //       }}\n      //     >\n      //       {!this.state.successful && (\n      //         <div>\n\n      //           <div className=\"form-group\">\n      //             <label htmlFor=\"firstname\">Firstname</label>\n      //             <Input\n      //               type=\"text\"\n      //               className=\"form-control\"\n      //               name=\"firstname\"\n      //               value={this.state.firstname}\n      //               onChange={this.onChangeFirstname}\n      //               validations={[required, firstname]}\n      //             />\n      //           </div>\n\n      //           <div className=\"form-group\">\n      //             <label htmlFor=\"lastname\">Lastname</label>\n      //             <Input\n      //               type=\"text\"\n      //               className=\"form-control\"\n      //               name=\"lastname\"\n      //               value={this.state.lastname}\n      //               onChange={this.onChangeLastname}\n      //               validations={[required, lastname]}\n      //             />\n      //           </div>\n\n      //           <div className=\"form-group\">\n      //             <label htmlFor=\"username\">Username</label>\n      //             <Input\n      //               type=\"text\"\n      //               className=\"form-control\"\n      //               name=\"username\"\n      //               value={this.state.username}\n      //               onChange={this.onChangeUsername}\n      //               validations={[required, vusername]}\n      //             />\n      //           </div>\n\n      //           <div className=\"form-group\">\n      //             <label htmlFor=\"password\">Password</label>\n      //             <Input\n      //               type=\"password\"\n      //               className=\"form-control\"\n      //               name=\"password\"\n      //               value={this.state.password}\n      //               onChange={this.onChangePassword}\n      //               validations={[required, vpassword]}\n      //             />\n      //           </div>\n\n      //           <div className=\"form-group\">\n      //             <label htmlFor=\"adress\">Adress</label>\n      //             <Input\n      //               type=\"text\"\n      //               className=\"form-control\"\n      //               name=\"adress\"\n      //               value={this.state.adress}\n      //               onChange={this.onChangeAdress}\n      //               validations={[required, vadress]}\n      //             />\n      //           </div>\n\n      //           <div className=\"form-group\">\n      //             <button className=\"btn btn-primary btn-block\">Sign Up</button>\n      //           </div>\n      //         </div>\n      //       )}\n\n      //       {this.state.message && (\n      //         <div className=\"form-group\">\n      //           <div\n      //             className={\n      //               this.state.successful\n      //                 ? \"alert alert-success\"\n      //                 : \"alert alert-danger\"\n      //             }\n      //             role=\"alert\"\n      //           >\n      //             {this.state.message}\n      //           </div>\n      //         </div>\n      //       )}\n      //       <CheckButton\n      //         style={{ display: \"none\" }}\n      //         ref={c => {\n      //           this.checkBtn = c;\n      //         }}\n      //       />\n      //     </Form>\n      //   </div>\n      // </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}