{"ast":null,"code":"import axios from 'axios';\nconst ARTICLES_REST_API_URL = 'http://localhost:8096/api/users';\n\nclass UserService {\n  getArticles() {\n    let user = localStorage.getItem(\"user\");\n    var json = JSON.parse(user);\n    return axios.get(ARTICLES_REST_API_URL, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`\n      }\n    });\n  }\n\n  getImages(image_src) {\n    let user = localStorage.getItem(\"user\");\n    var json = JSON.parse(user);\n    return axios.get(ARTICLES_REST_API_URL + \"/getImage/\" + image_src, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`\n      }\n    });\n  }\n\n  createArticle(article) {\n    let user = localStorage.getItem(\"user\");\n    let json = JSON.parse(user);\n    const formdata = new FormData();\n    formdata.append(\"name\", article.name);\n    formdata.append(\"description\", article.description);\n    formdata.append(\"price\", article.price);\n    formdata.append(\"image_src\", article.image_src);\n    return axios.post(ARTICLES_REST_API_URL + \"/new\", formdata, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`,\n        'Access-Control-Allow-Origin': '*',\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  getArticleById(username) {\n    let user = localStorage.getItem(\"user\");\n    var json = JSON.parse(user);\n    return axios.get(ARTICLES_REST_API_URL + '/' + username, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  getUserByUsername(articleId) {\n    let user = localStorage.getItem(\"user\");\n    var json = JSON.parse(user);\n    return axios.get(\"http://localhost:8096/api/users/username\" + '/' + \"pera\", {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  updateArticle(article, articleId) {\n    let user = localStorage.getItem(\"user\");\n    var json = JSON.parse(user);\n    const formdata = new FormData();\n    formdata.append(\"name\", article.name);\n    formdata.append(\"description\", article.description);\n    formdata.append(\"price\", article.price);\n    formdata.append(\"image_src\", article.image_src);\n    return axios.put(ARTICLES_REST_API_URL + '/' + articleId, formdata, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`,\n        'Access-Control-Allow-Origin': '*',\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  resetPassword(user) {\n    let userr = localStorage.getItem(\"user\");\n    var json = JSON.parse(userr);\n    const formdata = new FormData();\n    formdata.append(\"username\", user.username);\n    formdata.append(\"firstname\", user.firstname);\n    formdata.append(\"lastname\", user.lastname);\n    formdata.append(\"password\", user.password);\n    formdata.append(\"blocked\", false);\n    return axios.put(\"http://localhost:8096/api/users/change-password\" + '/' + user.username, user, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`,\n        'Access-Control-Allow-Origin': '*',\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  deleteArticle(articleId) {\n    let user = localStorage.getItem(\"user\");\n    var json = JSON.parse(user);\n    return axios.delete(ARTICLES_REST_API_URL + '/' + articleId, {\n      headers: {\n        'Authorization': `Bearer ${json.accessToken}`,\n        'Access-Control-Allow-Origin': '*',\n        \"Access-Control-Allow-Methods\": \"DELETE, POST, GET, OPTIONS\",\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["/home/ubuntu/Downloads/OSA-React-master/src/services/UserService.js"],"names":["axios","ARTICLES_REST_API_URL","UserService","getArticles","user","localStorage","getItem","json","JSON","parse","get","headers","accessToken","getImages","image_src","createArticle","article","formdata","FormData","append","name","description","price","post","getArticleById","username","getUserByUsername","articleId","updateArticle","put","resetPassword","userr","firstname","lastname","password","deleteArticle","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst ARTICLES_REST_API_URL = 'http://localhost:8096/api/users';\n\nclass UserService{\n    getArticles(){\n\n        let user = localStorage.getItem(\"user\")\n        var json = JSON.parse(user);\n        return axios.get(ARTICLES_REST_API_URL, {\n            headers: {\n                'Authorization': `Bearer ${json.accessToken}`\n              }\n        });\n    }\n\n    getImages(image_src){\n\n        let user = localStorage.getItem(\"user\")\n        var json = JSON.parse(user);\n        return axios.get(ARTICLES_REST_API_URL + \"/getImage/\" + image_src, {\n            headers: {\n                'Authorization': `Bearer ${json.accessToken}`\n              }\n        });\n    }\n\n    createArticle(article){\n        let user = localStorage.getItem(\"user\")\n        let json = JSON.parse(user);\n        const formdata = new FormData();\n        formdata.append(\"name\", article.name)\n        formdata.append(\"description\", article.description)\n        formdata.append(\"price\", article.price)\n        formdata.append(\"image_src\", article.image_src)\n        return axios.post(ARTICLES_REST_API_URL + \"/new\", formdata, {headers: {\n            'Authorization': `Bearer ${json.accessToken}`,\n            'Access-Control-Allow-Origin': '*',\n            \"Access-Control-Allow-Methods\":\"DELETE, POST, GET, OPTIONS\",\n            'Access-Control-Allow-Credentials': 'true',\n            'Content-Type':  'multipart/form-data'\n          }});\n    }\n\n    getArticleById(username){\n        let user = localStorage.getItem(\"user\")\n        var json = JSON.parse(user);\n        return axios.get(ARTICLES_REST_API_URL + '/' + username, {headers: {\n            'Authorization': `Bearer ${json.accessToken}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Credentials': 'true',\n            'Content-Type':  'application/json'\n          }})\n    }\n\n    getUserByUsername(articleId){\n        let user = localStorage.getItem(\"user\")\n        var json = JSON.parse(user);\n        return axios.get(\"http://localhost:8096/api/users/username\" + '/' + \"pera\", {headers: {\n            'Authorization': `Bearer ${json.accessToken}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Credentials': 'true',\n            'Content-Type':  'application/json'\n          }})\n    }\n\n    updateArticle(article, articleId){\n        let user = localStorage.getItem(\"user\")\n        var json = JSON.parse(user);\n        const formdata = new FormData();\n        formdata.append(\"name\", article.name)\n        formdata.append(\"description\", article.description)\n        formdata.append(\"price\", article.price)\n        formdata.append(\"image_src\", article.image_src)\n        return axios.put(ARTICLES_REST_API_URL + '/' + articleId, formdata, {headers: {\n            'Authorization': `Bearer ${json.accessToken}`,\n            'Access-Control-Allow-Origin': '*',\n            \"Access-Control-Allow-Methods\":\"DELETE, POST, GET, OPTIONS\",\n            'Access-Control-Allow-Credentials': 'true',\n            'Content-Type':  'multipart/form-data'\n          }});\n    }\n\n    resetPassword(user){\n        let userr = localStorage.getItem(\"user\")\n        var json = JSON.parse(userr);\n        const formdata = new FormData();\n        formdata.append(\"username\", user.username)\n        formdata.append(\"firstname\", user.firstname)\n        formdata.append(\"lastname\", user.lastname)\n        formdata.append(\"password\", user.password)\n        formdata.append(\"blocked\", false)\n        return axios.put(\"http://localhost:8096/api/users/change-password\" + '/' + user.username, user, {headers: {\n            'Authorization': `Bearer ${json.accessToken}`,\n            'Access-Control-Allow-Origin': '*',\n            \"Access-Control-Allow-Methods\":\"DELETE, POST, GET, OPTIONS\",\n            'Access-Control-Allow-Credentials': 'true',\n            'Content-Type':  'application/json'\n          }});\n    }\n\n    deleteArticle(articleId){\n        let user = localStorage.getItem(\"user\")\n        var json = JSON.parse(user);\n        return axios.delete(ARTICLES_REST_API_URL + '/' + articleId, {headers: {\n            'Authorization': `Bearer ${json.accessToken}`,\n            'Access-Control-Allow-Origin': '*',\n            \"Access-Control-Allow-Methods\":\"DELETE, POST, GET, OPTIONS\",\n            'Access-Control-Allow-Credentials': 'true',\n            'Content-Type':  'application/json'\n          }});\n    }\n}\n\nexport default new UserService();\n"]},"metadata":{},"sourceType":"module"}