{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Downloads/OSA-React-master/src/components/ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/UserService\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"This field is required!\");\n  }\n};\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeNewPassword = this.onChangeNewPassword.bind(this);\n    this.onChangeRepeatPassword = this.onChangeRepeatPassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      loading: false,\n      message: \"\",\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const user = UserService.getUserByUsername(currentUser.username).then(result => this.setState({\n      user: result.data\n    }));\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeNewPassword(e) {\n    this.setState({\n      newPassword: e.target.value\n    });\n  }\n\n  onChangeRepeatPassword(e) {\n    this.setState({\n      repeatPassword: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    UserService.resetPassword(this.state.user).then(() => {\n      this.props.history.push(\"/profile\");\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      this.setState({\n        loading: false,\n        message: resMessage\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"newPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"newPassword\",\n      value: this.state.newPassword,\n      onChange: this.onChangeNewPassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"repeatPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Repeat Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"repeatPassword\",\n      value: this.state.repeatPassword,\n      onChange: this.onChangeRepeatPassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      disabled: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Reset\"))), this.state.message && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.message)), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Downloads/OSA-React-master/src/components/ResetPassword.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","UserService","required","value","ResetPassword","constructor","props","onChangePassword","bind","onChangeNewPassword","onChangeRepeatPassword","state","username","password","newPassword","repeatPassword","loading","message","user","componentDidMount","currentUser","getCurrentUser","getUserByUsername","then","result","setState","data","e","target","handleLogin","preventDefault","resetPassword","history","push","window","location","reload","error","resMessage","response","toString","render","c","form","display","checkBtn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/UserService\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeNewPassword = this.onChangeNewPassword.bind(this);\n    this.onChangeRepeatPassword = this.onChangeRepeatPassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      loading: false,\n      message: \"\",\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const user = UserService.getUserByUsername(currentUser.username)\n                                    .then(result => this.setState({ user: result.data}))\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeNewPassword(e) {\n    this.setState({\n      newPassword: e.target.value\n    });\n  }\n\n  onChangeRepeatPassword(e) {\n    this.setState({\n      repeatPassword: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n  e.preventDefault();\n    UserService.resetPassword(this.state.user).then(\n      () => {\n        this.props.history.push(\"/profile\");\n        window.location.reload();\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          loading: false,\n          message: resMessage\n        });\n      }\n    );\n\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Current Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"newPassword\">New Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"newPassword\"\n                value={this.state.newPassword}\n                onChange={this.onChangeNewPassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"repeatPassword\">Repeat Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"repeatPassword\"\n                value={this.state.repeatPassword}\n                onChange={this.onChangeRepeatPassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Reset</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}