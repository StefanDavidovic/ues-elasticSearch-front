{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Downloads/OSA-React-master/src/components/ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/UserService\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"This field is required!\");\n  }\n};\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogin = e => {\n      e.preventDefault();\n      let user = {\n        username: this.state.user.username,\n        firstname: this.state.user.firstname,\n        lastname: this.state.user.lastname,\n        password: this.state.newPassword,\n        blocked: false\n      };\n      UserService.resetPassword(user).then(res => {\n        console.log(\"Order\");\n      });\n    };\n\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeNewPassword = this.onChangeNewPassword.bind(this);\n    this.onChangeRepeatPassword = this.onChangeRepeatPassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      loading: false,\n      message: \"\",\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const user = UserService.getUserByUsername(currentUser.username).then(result => this.setState({\n      user: result.data\n    }));\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeNewPassword(e) {\n    this.setState({\n      newPassword: e.target.value\n    });\n  }\n\n  onChangeRepeatPassword(e) {\n    console.log(this.state.newPassword);\n    this.setState({\n      repeatPassword: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"newPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"newPassword\",\n      value: this.state.newPassword,\n      onChange: this.onChangeNewPassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"repeatPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Repeat Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"repeatPassword\",\n      value: this.state.repeatPassword,\n      onChange: this.onChangeRepeatPassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      disabled: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Reset\"))), this.state.message && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.message)), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Downloads/OSA-React-master/src/components/ResetPassword.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","UserService","required","value","ResetPassword","constructor","props","handleLogin","e","preventDefault","user","username","state","firstname","lastname","password","newPassword","blocked","resetPassword","then","res","console","log","onChangePassword","bind","onChangeNewPassword","onChangeRepeatPassword","repeatPassword","loading","message","componentDidMount","currentUser","getCurrentUser","getUserByUsername","result","setState","data","target","render","c","form","display","checkBtn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/UserService\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeNewPassword = this.onChangeNewPassword.bind(this);\n    this.onChangeRepeatPassword = this.onChangeRepeatPassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      loading: false,\n      message: \"\",\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const user = UserService.getUserByUsername(currentUser.username).then(result => this.setState({ user: result.data}))\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeNewPassword(e) {\n    this.setState({\n      newPassword: e.target.value\n    });\n  }\n\n  onChangeRepeatPassword(e) {\n    console.log(this.state.newPassword)\n    this.setState({\n      repeatPassword: e.target.value\n    });\n  }\n\n  handleLogin= (e) => {\n  e.preventDefault();\n    let user = {username:this.state.user.username, firstname:this.state.user.firstname,\n      lastname:this.state.user.lastname, password:this.state.newPassword, blocked:false}\n    UserService.resetPassword(user).then(res => {\n      console.log(\"Order\")\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Current Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"newPassword\">New Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"newPassword\"\n                value={this.state.newPassword}\n                onChange={this.onChangeNewPassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"repeatPassword\">Repeat Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"repeatPassword\"\n                value={this.state.repeatPassword}\n                onChange={this.onChangeRepeatPassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Reset</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}