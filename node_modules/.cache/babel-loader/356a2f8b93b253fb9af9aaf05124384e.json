{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nexport const TokenService = {\n  getToken,\n  setToken,\n  removeToken,\n  decodeToken,\n  didTokenExpire\n};\n\nfunction getToken() {\n  let user = localStorage.getItem(\"user\");\n  var json = JSON.parse(user);\n  console.log('getToken: ' + json.accessToken);\n  return json.accessToken;\n}\n\nfunction setToken(value) {\n  let user = localStorage.getItem(\"user\");\n  var json = JSON.parse(user);\n  localStorage.setItem(\"accessToken\", value);\n}\n\nfunction removeToken() {\n  let user = localStorage.getItem(\"user\");\n  var json = JSON.parse(user);\n  localStorage.removeItem(\"accessToken\");\n}\n\nfunction decodeToken(token) {\n  try {\n    return jwtDecode(token);\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction didTokenExpire() {\n  const token = getToken();\n  const decodedToken = token ? decodeToken(token) : null;\n  return decodedToken ? decodedToken.exp_date < Date.now() : null;\n}","map":{"version":3,"sources":["/home/ubuntu/Downloads/OSA-React-master/src/services/TokenService.js"],"names":["jwtDecode","TokenService","getToken","setToken","removeToken","decodeToken","didTokenExpire","user","localStorage","getItem","json","JSON","parse","console","log","accessToken","value","setItem","removeItem","token","error","decodedToken","exp_date","Date","now"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAGA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAD0B;AAE1BC,EAAAA,QAF0B;AAG1BC,EAAAA,WAH0B;AAI1BC,EAAAA,WAJ0B;AAK1BC,EAAAA;AAL0B,CAArB;;AAQP,SAASJ,QAAT,GAAoB;AAClB,MAAIK,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAX;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,IAAI,CAACK,WAAhC;AACA,SAAOL,IAAI,CAACK,WAAZ;AAED;;AAED,SAASZ,QAAT,CAAkBa,KAAlB,EAAyB;AACvB,MAAIT,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAX;AACAC,EAAAA,YAAY,CAACS,OAAb,CAAqB,aAArB,EAAoCD,KAApC;AACD;;AAED,SAASZ,WAAT,GAAuB;AACrB,MAAIG,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAX;AACAC,EAAAA,YAAY,CAACU,UAAb,CAAwB,aAAxB;AACD;;AAED,SAASb,WAAT,CAAqBc,KAArB,EAA4B;AAC1B,MAAI;AACF,WAAOnB,SAAS,CAACmB,KAAD,CAAhB;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF;;AAED,SAASd,cAAT,GAA0B;AACxB,QAAMa,KAAK,GAAGjB,QAAQ,EAAtB;AACA,QAAMmB,YAAY,GAAGF,KAAK,GAAGd,WAAW,CAACc,KAAD,CAAd,GAAwB,IAAlD;AACA,SAAOE,YAAY,GAAGA,YAAY,CAACC,QAAb,GAAwBC,IAAI,CAACC,GAAL,EAA3B,GAAwC,IAA3D;AACD","sourcesContent":["import jwtDecode from \"jwt-decode\";\n\n\nexport const TokenService = {\n  getToken,\n  setToken,\n  removeToken,\n  decodeToken,\n  didTokenExpire,\n};\n\nfunction getToken() {\n  let user = localStorage.getItem(\"user\")\n  var json = JSON.parse(user);\n  console.log('getToken: ' + json.accessToken)\n  return json.accessToken;\n  \n}\n\nfunction setToken(value) {\n  let user = localStorage.getItem(\"user\")\n  var json = JSON.parse(user);\n  localStorage.setItem(\"accessToken\", value);\n}\n\nfunction removeToken() {\n  let user = localStorage.getItem(\"user\")\n  var json = JSON.parse(user);\n  localStorage.removeItem(\"accessToken\");\n}\n\nfunction decodeToken(token) {\n  try {\n    return jwtDecode(token);\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction didTokenExpire() {\n  const token = getToken();\n  const decodedToken = token ? decodeToken(token) : null;\n  return decodedToken ? decodedToken.exp_date < Date.now() : null;\n}"]},"metadata":{},"sourceType":"module"}