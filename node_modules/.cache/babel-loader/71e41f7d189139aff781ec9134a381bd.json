{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Downloads/OSA-React-master/src/components/ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"This field is required!\");\n  }\n};\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props); // this.handleLogin = this.handleLogin.bind(this);\n    // this.onChangeUsername = this.onChangeUsername.bind(this);\n\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      loading: false,\n      message: \"\",\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    if (!currentUser) this.setState({\n      redirect: \"/home\"\n    });\n    this.setState({\n      user: currentUser\n    });\n    console.log(currentUser);\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeNewPassword(e) {\n    this.setState({\n      newPassword: e.target.value\n    });\n  }\n\n  onChangeRepeatPassword(e) {\n    this.setState({\n      repeatPassword: e.target.value\n    });\n  } // handleLogin(e) {\n  //   e.preventDefault();\n  //   console.log(\"BLA BLA BLAAA\")\n  //   this.setState({\n  //     message: \"\",\n  //     loading: true\n  //   });\n  //   this.form.validateAll();\n  //   if (this.checkBtn.context._errors.length === 0) {\n  //     let userr = {username:this.state.user}\n  //     AuthService.login(this.state.username, this.state.password).then(\n  //       () => {\n  //         this.props.history.push(\"/profile\");\n  //         window.location.reload();\n  //       },\n  //       error => {\n  //         const resMessage =\n  //           (error.response &&\n  //             error.response.data &&\n  //             error.response.data.message) ||\n  //           error.message ||\n  //           error.toString();\n  //         this.setState({\n  //           loading: false,\n  //           message: resMessage\n  //         });\n  //       }\n  //     );\n  //   } else {\n  //     this.setState({\n  //       loading: false\n  //     });\n  //   }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Repeat Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      disabled: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Login\"))), this.state.message && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.message)), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Downloads/OSA-React-master/src/components/ResetPassword.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","required","value","ResetPassword","constructor","props","onChangePassword","bind","state","username","password","newPassword","repeatPassword","loading","message","user","componentDidMount","currentUser","getCurrentUser","setState","redirect","console","log","e","target","onChangeNewPassword","onChangeRepeatPassword","render","handleLogin","c","form","display","checkBtn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    // this.handleLogin = this.handleLogin.bind(this);\n    // this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      loading: false,\n      message: \"\",\n      user: ''\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ user: currentUser})\n    console.log(currentUser)\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeNewPassword(e) {\n    this.setState({\n      newPassword: e.target.value\n    });\n  }\n\n  onChangeRepeatPassword(e) {\n    this.setState({\n      repeatPassword: e.target.value\n    });\n  }\n\n  // handleLogin(e) {\n  //   e.preventDefault();\n  //   console.log(\"BLA BLA BLAAA\")\n  //   this.setState({\n  //     message: \"\",\n  //     loading: true\n  //   });\n\n  //   this.form.validateAll();\n\n  //   if (this.checkBtn.context._errors.length === 0) {\n  //     let userr = {username:this.state.user}\n  //     AuthService.login(this.state.username, this.state.password).then(\n  //       () => {\n  //         this.props.history.push(\"/profile\");\n  //         window.location.reload();\n  //       },\n  //       error => {\n  //         const resMessage =\n  //           (error.response &&\n  //             error.response.data &&\n  //             error.response.data.message) ||\n  //           error.message ||\n  //           error.toString();\n\n  //         this.setState({\n  //           loading: false,\n  //           message: resMessage\n  //         });\n  //       }\n  //     );\n  //   } else {\n  //     this.setState({\n  //       loading: false\n  //     });\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Current Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">New Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Repeat Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}